{"version":3,"sources":["data.js","App.js","serviceWorker.js","index.js"],"names":["styles","container","flexGrow","innerContainer","marginTop","height","body","position","width","display","margin","header","headerPadding","padding","paddingBottom","paddingDiv","paddingTop","App","useState","data","criteria","setData","useEffect","json","Grid","style","spacing","item","xs","md","lg","Paper","elevation","Typography","variant","gutterBottom","FormControl","formControl","InputLabel","htmlFor","Select","labelId","id","value","onChange","event","target","label","MenuItem","scale","tooltipContent","class","tooltip","tooltipPosition","keyId","window","innerWidth","innerHeight","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.acb68281.chunk.js","sourcesContent":["export default {\r\n  \"name\": \"Data\",\r\n      \"children\": [\r\n        {\r\n          \"name\": \"Camp Admin\",\r\n          \"children\": [\r\n            {\r\n              \"name\": \"Devices\",\r\n              \"children\": [\r\n                {\r\n                  \"name\": \"147dda3e755c\", \"minSize\": 10, \"size\": 3000\r\n                },\r\n                {\r\n                  \"name\": \"ccf9e4d6f709\", \"minSize\": 10, \"size\": 3000\r\n                },\r\n                {\r\n                  \"name\": \"ccf9e4d2d8ea\", \"minSize\": 10, \"size\": 3000\r\n                },\r\n                {\r\n                  \"name\": \"b0be834f6026\", \"minSize\": 10, \"size\": 3000\r\n                },\r\n                {\r\n                  \"name\": \"96e6e73dc592\", \"minSize\": 10, \"size\": 3000\r\n                },\r\n                {\r\n                  \"name\": \"425df96de794\", \"minSize\": 10, \"size\": 3000\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"name\": \"Phil\",\r\n          \"children\": [\r\n            {\r\n              \"name\": \"Devices\",\r\n              \"children\": [\r\n                {\r\n                  \"name\": \"a6b8cf380b1f\", \"minSize\": 10, \"size\": 3000\r\n                },\r\n                {\r\n                  \"name\": \"103d0a0f2448\", \"minSize\": 10, \"size\": 3000\r\n                },\r\n              ]\r\n            },\r\n          ]\r\n        },\r\n        {\r\n        \"name\": \"Gary F\",\r\n        \"children\": [\r\n          {\r\n            \"name\": \"Devices\",\r\n            \"children\": [\r\n              {\r\n                \"name\": \"9e0bc2fddb9e\", \"minSize\": 10, \"size\": 3000\r\n              },\r\n            ]\r\n          }\r\n        ]\r\n        },\r\n        {\r\n          \"name\": \"Rajat Menon\",\r\n          \"children\": [\r\n            {\r\n              \"name\": \"Devices\",\r\n              \"children\": [\r\n                {\r\n                  \"name\": \"4889e71e62b6\", \"minSize\": 10, \"size\": 3000\r\n                },\r\n                {\r\n                  \"name\": \"ce47413cf1fa\",\"minSize\": 10, \"size\": 3000\r\n                }\r\n              ]\r\n            },\r\n          ]\r\n        },\r\n        {\r\n          \"name\": \"Hitesh Meraki\",\r\n          \"children\": [\r\n            {\r\n              \"name\": \"Devices\",\r\n              \"children\": [\r\n                {\r\n                  \"name\": \"6a9d29f695bd\", \"minSize\": 10, \"size\": 3000\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n","import React, {useEffect, useState} from 'react'\r\nimport './App.css';\r\nimport Sunburst from 'react-d3-zoomable-sunburst';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport json from \"./data\";\r\nconst styles = {\r\n  container: {\r\n    flexGrow: 1\r\n  },\r\n  innerContainer: {\r\n    flexGrow: 1,\r\n    marginTop: 5,\r\n    height: \"100%\"\r\n  },\r\n  body: {\r\n    position: \"absolute\",\r\n    width: \"97%\",\r\n    display: \"flex\",\r\n    margin: 20\r\n  },\r\n  header: {\r\n    height: \"100%\",\r\n    width: \"97%\",\r\n    margin: 20\r\n  },\r\n  headerPadding: {\r\n    padding: 10,\r\n    paddingBottom: 5\r\n  },\r\n  paddingDiv: {paddingTop: 30},\r\n}\r\n\r\nfunction App() {\r\n  const [data, setData] = useState({\r\n    data: {},\r\n    criteria: \"minSize\",\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    setData({...data, data: json})\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const submit = (event) => {\r\n    setData({...data, criteria: event.target.value})\r\n  }\r\n  return (\r\n      <Grid container style={styles.container} spacing={2}>\r\n        <Grid item xs={12} md={12} lg={12}>\r\n          <Paper elevation={3} style={styles.header}>\r\n            <Grid container style={styles.innerContainer} spacing={2}>\r\n              <Grid item xs={12} md={6} lg={6} style={styles.paddingDiv}>\r\n                <Typography variant=\"h5\" gutterBottom style={styles.headerPadding}>\r\n                  Users\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} md={6} lg={6} style={styles.paddingDiv}>\r\n                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                  <InputLabel htmlFor=\"criteria\">Criteria</InputLabel>\r\n                  <Select\r\n                      labelId=\"criteria\"\r\n                      id=\"criteria\"\r\n                      value={data.criteria}\r\n                      onChange={submit}\r\n                      label=\"criteria\"\r\n                  >\r\n                    <MenuItem value={\"minSize\"}>minSize</MenuItem>\r\n                    <MenuItem value={\"size\"}>Size</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={12} lg={12}>\r\n          <Paper elevation={3} style={styles.body}>\r\n            <Sunburst\r\n                data={data.data}\r\n                \r\n                scale=\"exponential\"\r\n                tooltipContent={ <div class=\"sunburstTooltip\" style=\"position:absolute; color:'black'; z-index:10; background: #e2e2e2; padding: 5px; text-align: center;\" /> }\r\n                tooltip\r\n                tooltipPosition=\"right\"\r\n                keyId=\"Sunburst\"\r\n                width={window.innerWidth * 0.8}\r\n                value={data.criteria}\r\n                height={window.innerHeight * 0.8}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}